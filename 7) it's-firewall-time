Finally, some safety here !
anyway, for this part you'll have to install something to help you secure your machine, its called iptables.

To install it : ~ apt-get install iptables

then, you'll need to know what ports are actually opened, and for that : ~ nmap <ip address of your machine>

for me the output looks like that :

Starting Nmap 7.40 ( https://nmap.org ) at 2019-02-25 15:23 GMT
Nmap scan report for 10.11.142.157
Host is up (0.00011s latency).
Not shown: 999 closed ports
PORT   STATE SERVICE
80/tcp open  http --> web server

Nmap done: 1 IP address (1 host up) scanned in 0.69 seconds

as you can see, only the port 80 is open, but here we want to secure the ports 1313 (for ssh connections), 80 (http connections) and 443 (https connections).
for that we will create a bash file in /etc/init.d, this way, the rules will be launches every time the machine is booted.

the file should look like that : 

#!/bin/bash

## Flush and purge of the old rules
/sbin/iptables -F
/sbin/iptables -X

## Default policy
/sbin/iptables -P INPUT DROP  --> never accept a connection from the outside on any port

## My rules
/sbin/iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT  --> accept the connections already established
/sbin/iptables -A INPUT -p tcp -i enp0s3 --dport 1313 -j ACCEPT --> authorize connections on port 1313 (ssh)
/sbin/iptables -A INPUT -p tcp -i enp0s3 --dport 80 -j ACCEPT --> authorize connections on port 80 (http)
/sbin/iptables -A INPUT -p tcp -i enp0s3 --dport 443 -j ACCEPT  --> authorize connections on port 443 (https)
/sbin/iptables -A INPUT -i lo -j ACCEPT --> authorize local traffic
/sbin/iptables -A INPUT -p icmp -j ACCEPT --> ping authorized
/sbin/iptables -A OUTPUT -p icmp -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT --> authorizations for output connections

the rules are now defined and you can test it by launching this bash 
~ (sudo) chmod 755 <nameofyourfile.sh>
~ (sudo) chmod +x <nameofyourfile.sh>
~ (sudo) sh <nameofyourfile.sh>

Et voil√† !
